    // backup code for transaction.component.ts 

    // import { Component, OnInit, OnDestroy } from '@angular/core';
    // import { ServerService } from '../../service/server.service';
    // import { Borrowing } from '../../model/borrowing.model';

    // declare var $: any;

    // @Component({
    // selector: 'app-transaction',
    // templateUrl: './transaction.component.html',
    // styleUrls: ['./transaction.component.css']
    // })
    // export class TransactionComponent implements OnInit, OnDestroy {
    // borrowings: Borrowing[] = [];

    // constructor(private serverService: ServerService) { }

    // ngOnInit(): void {
    //     this.fetchBorrowings();
    // }

    // ngOnDestroy(): void {
    //     if ($.fn.DataTable.isDataTable('#borrowingTable')) {
    //     $('#borrowingTable').DataTable().destroy();
    //     }
    // }

    // fetchBorrowings(): void {
    //     this.serverService.getBorrowings().subscribe((data: Borrowing[]) => {
    //     this.borrowings = data;
    //     if ($.fn.DataTable.isDataTable('#borrowingTable')) {
    //         const dataTable = $('#borrowingTable').DataTable();
    //         dataTable.clear().draw();
    //         dataTable.rows.add(this.borrowings).draw();
    //     } else {
    //         this.initializeDataTable();
    //     }
    //     });
    // }
    // returnBook(borrowingId: number): void {
    //     this.serverService.returnBook(borrowingId).subscribe(
    //     () => {
    //         console.log('Book returned successfully');
    //         // If needed, you can trigger a reload of borrowings data here
    //         this.fetchBorrowings();
    //     },
    //     (error) => {
    //         console.error('Error returning book:', error);
    //     }
    //     );
    // }

    // private initializeDataTable(): void {
    //     $('#borrowingTable').DataTable({
    //     data: this.borrowings,
    //     columns: [
    //         { title: 'User ID', data: 'user_id' },
    //         { title: 'Book ID', data: 'book_id' },
    //         { title: 'Borrow Date', data: 'borrow_date' },
    //         { title: 'Status', data: 'status' },
    //         {
    //         title: 'Action',
    //         render: (data: any, type: any, row: any) => {
    //             return `<button class="btn btn-primary return-button" data-borrowing-id="${row.id}">Return</button>`;
    //         }
    //         }
    //     ]
    //     });
    
    //     // Add event listener for button clicks
    //     $('#borrowingTable').on('click', '.return-button', (event: MouseEvent) => {
    //     const borrowingId = $(event.currentTarget).data('borrowing-id');
    //     this.returnBook(borrowingId);
    //     });
    // }
    
    // }
